version: '1.0'
kind: step-type
metadata:
  name: openclassrooms/github-pr-comment
  isPublic: false
  description: >-
    This pipeline plugin adds comments to GitHub pull requests
  sources:
    - 'https://github.com/nilleb/github-pr-comment-step'
  stage: incubating
  maintainers:
    - name: Ivo Bellin Salarin
    - name: Kostis Kapelonis
    - name: Wezz Perks
  categories:
    - git
  official: false
  tags: []
  icon:
    type: svg
    url: https://cdn.worldvectorlogo.com/logos/github.svg
    background: '#f4f4f4'
  examples:
    - description: automatic-comment-pr
      workflow:
        version: '1.0'
        steps:
          add_comment_on_current_pr_from_trigger:
            title: Adding comment on this PR
            type: openclassrooms/github-pr-comment
            fail_fast: false
            arguments:
              PR_COMMENT_TEXT: 'Your staging environment is ready at http://example.com/${{CF_BRANCH_TAG_NORMALIZED}}/preview'
              GIT_PROVIDER_NAME: 'github'
    - description: commment-on-specific-pr
      workflow:
        version: '1.0'
        steps:
          add_pr_comment_directly:
            title: Adding comment on another PR
            type: openclassrooms/github-pr-comment
            fail_fast: false
            arguments:
              PR_COMMENT_TEXT: 'Example comment on PR 45'
              GIT_PROVIDER_NAME: 'github'
              CF_PULL_REQUEST_NUMBER: 45
    - description: delete-previous-pr-comment
      workflow:
        version: '1.0'
        steps:
          add_pr_comment_directly:
            title: Deleting previous comment before adding a new one
            type: openclassrooms/github-pr-comment
            fail_fast: false
            arguments:
              PR_COMMENT_TEXT: 'Example comment on PR 45'
              GIT_PROVIDER_NAME: 'github'
              CF_PULL_REQUEST_NUMBER: 45
              DELETE_COMMENT_REGEX: 'Example comment on PR 45'
  latest: true
  version: 1.1.0
spec:
  arguments: |
    {
        "definitions": {},
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "additionalProperties": false,
        "patterns": [],
        "required": [
          "GIT_PROVIDER_NAME",
          "PR_COMMENT_TEXT"
        ],
        "optional": [
          "CF_PULL_REQUEST_NUMBER"
        ],        
        "properties": {
            "CF_PULL_REQUEST_NUMBER": {
                "type": "number",
                "description": "Github pull request number (Automatically set in PR trigger events)"
            },
            "PR_COMMENT_TEXT": {
                "type": "string",
                "description": "Text body of the comment to be created"
            },            
            "GIT_PROVIDER_NAME": {
                "type": "string",
                "description": "Name of git provider to use from Codefresh integrations screen"
            },
            "DELETE_COMMENT_REGEX": {
                "type": "string",
                "description": "Regex to find previous comments to delete before creating the new comment"
            }
        }
    }
  steps:
    get_github_token:
       title: "Get token"
       image: codefresh/cli
       environment:
         - GIT_PROVIDER_NAME=${{GIT_PROVIDER_NAME}}       
       commands:
         - export GITHUB_TOKEN=$(codefresh get context $GIT_PROVIDER_NAME --decrypt -o yaml | yq -r -c .spec.data.auth.password)  
         - echo GITHUB_TOKEN=$GITHUB_TOKEN >> /meta/env_vars_to_export         
    create_pr_comment:
       title: "Write comment"
       image: cloudposse/github-commenter      
       environment:
         - GITHUB_OWNER=${{CF_REPO_OWNER}} 
         - GITHUB_REPO=${{CF_REPO_NAME}}
         - GITHUB_COMMENT_TYPE=pr
         - GITHUB_PR_ISSUE_NUMBER=${{CF_PULL_REQUEST_NUMBER}}
         - GITHUB_COMMENT=${{PR_COMMENT_TEXT}}
         - GITHUB_DELETE_COMMENT_REGEX=${{DELETE_COMMENT_REGEX}}
       commands:
         - github-commenter
